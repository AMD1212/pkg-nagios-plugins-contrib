.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CHECK_HP_BLADECHASSIS 8"
.TH CHECK_HP_BLADECHASSIS 8 "2009-08-20" "check_hp_bladechassis 1.0.1" "Nagios plugin"
.SH "NAME"
check_hp_bladechassis \- Nagios plugin for checking the status of HP
blade enclosures via SNMP
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
check_hp_bladechassis \-H <\fI\s-1HOSTNAME\s0\fR> [\fI\s-1OPTION\s0\fR]...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
check_hp_bladechassis is a plugin for the Nagios monitoring software
that checks the hardware health status of a \s-1HP\s0 blade
enclosure/chassis. The plugin is only tested with the c7000 enclosure.
.SH "COMMON OPTIONS"
.IX Header "COMMON OPTIONS"
.IP "\-H, \-\-hostname \fI\s-1HOSTNAME\s0\fR" 4
.IX Item "-H, --hostname HOSTNAME"
The transport address (hostname or \s-1IP\s0) of the blade enclosure you want
to monitor. This option is mandatory.
.IP "\-C, \-\-community \fI\s-1COMMUNITY\s0\fR" 4
.IX Item "-C, --community COMMUNITY"
This option expects a string that is to be used as the \s-1SNMP\s0 community
name when using \s-1SNMP\s0 version 1 or 2c.  By default the community name
is set to \f(CW\*(C`public\*(C'\fR if the option is not present.
.IP "\-p, \-\-perfdata" 4
.IX Item "-p, --perfdata"
Collect performance data. Performance data collected is total
power usage.
.IP "\-t, \-\-timeout \fI\s-1SECONDS\s0\fR" 4
.IX Item "-t, --timeout SECONDS"
The number of seconds after which the plugin will abort. Default
timeout is 30 seconds if the option is not present.
.IP "\-i, \-\-info" 4
.IX Item "-i, --info"
Prefix any alerts with the enclosure serial number.
.IP "\-v, \-\-verbose" 4
.IX Item "-v, --verbose"
In case of an alert, the part number, spare part number and serial
number of the failed component is appended to the alert message.
.IP "\-e, \-\-extinfo" 4
.IX Item "-e, --extinfo"
Display a short summary of system information (product, serial number,
firmware and the number of blades and I/O modules) in case of an
alert.
.IP "\-s, \-\-state" 4
.IX Item "-s, --state"
Prefix each alert with its corresponding service state (i.e. warning,
critical etc.). This is useful in case of several alerts from the same
monitored system.
.IP "\-\-short\-state" 4
.IX Item "--short-state"
Same as the \fB\-\-state\fR option above, except that the state is
abbreviated to a single letter (W=warning, C=critical etc.).
.IP "\-d, \-\-debug" 4
.IX Item "-d, --debug"
Debug output. Will report status on all monitored subsystems,
regardless of their alert state. Will also report total power usage.
.IP "\-h, \-\-help" 4
.IX Item "-h, --help"
Display help text.
.IP "\-V, \-\-version" 4
.IX Item "-V, --version"
Display version info.
.SH "ADVANCED OPTIONS"
.IX Header "ADVANCED OPTIONS"
.IP "\-P, \-\-protocol \fI\s-1PROTOCOL\s0\fR" 4
.IX Item "-P, --protocol PROTOCOL"
\&\s-1SNMP\s0 protocol version. This option is optional and expects a digit
(i.e.  \f(CW1\fR, \f(CW2\fR or \f(CW3\fR) to define the \s-1SNMP\s0 version. The default is
\&\f(CW2\fR, i.e. \s-1SNMP\s0 version 2c.
.IP "\-\-port \fI\s-1PORT\s0\fR" 4
.IX Item "--port PORT"
\&\s-1SNMP\s0 port of the remote (monitored) system. Defaults to the well-known
\&\s-1SNMP\s0 port 161.
.IP "\-U, \-\-username \fI\s-1SECURITYNAME\s0\fR" 4
.IX Item "-U, --username SECURITYNAME"
[SNMPv3] The User-based Security Model (\s-1USM\s0) used by SNMPv3 requires
that a securityName be specified. This option is required when using
\&\s-1SNMP\s0 version 3, and expects a string 1 to 32 octets in lenght.
.IP "\-\-authpassword \fI\s-1PASSWORD\s0\fR, \-\-authkey \fI\s-1KEY\s0\fR" 4
.IX Item "--authpassword PASSWORD, --authkey KEY"
[SNMPv3] By default a securityLevel of \f(CW\*(C`noAuthNoPriv\*(C'\fR is assumed.  If
the \-\-authpassword option is specified, the securityLevel becomes
\&\f(CW\*(C`authNoPriv\*(C'\fR.  The \-\-authpassword option expects a string which is at
least 1 octet in length as argument.
.Sp
Optionally, instead of the \-\-authpassword option, the \-\-authkey option
can be used so that a plain text password does not have to be
specified in a script.  The \-\-authkey option expects a hexadecimal
string produced by localizing the password with the
authoritativeEngineID for the specific destination device.  The
\&\f(CW\*(C`snmpkey\*(C'\fR utility included with the Net::SNMP distribution can be
used to create the hexadecimal string (see snmpkey).
.IP "\-\-authprotocol \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "--authprotocol ALGORITHM"
[SNMPv3] Two different hash algorithms are defined by SNMPv3 which can
be used by the Security Model for authentication. These algorithms are
\&\s-1HMAC\-MD5\-96\s0 \f(CW\*(C`MD5\*(C'\fR (\s-1RFC\s0 1321) and \s-1HMAC\-SHA\-96\s0 \f(CW\*(C`SHA\-1\*(C'\fR (\s-1NIST\s0 \s-1FIPS\s0 \s-1PUB\s0
180\-1). The default algorithm used by the plugin is \s-1HMAC\-MD5\-96\s0.  This
behavior can be changed by using this option. The option expects
either the string \f(CW\*(C`md5\*(C'\fR or \f(CW\*(C`sha\*(C'\fR to be passed as argument to modify
the hash algorithm.
.IP "\-\-privpassword \fI\s-1PASSWORD\s0\fR, \-\-privkey \fI\s-1KEY\s0\fR" 4
.IX Item "--privpassword PASSWORD, --privkey KEY"
[SNMPv3] By specifying the options \-\-privkey or \-\-privpassword, the
securityLevel associated with the object becomes
\&\f(CW\*(C`authPriv\*(C'\fR. According to SNMPv3, privacy requires the use of
authentication. Therefore, if either of these two options are present
and the \-\-authkey or \-\-authpassword arguments are missing, the
creation of the object fails.  The \-\-privkey and \-\-privpassword
options expect the same input as the \-\-authkey and \-\-authpassword
options respectively.
.IP "\-\-privprotocol \fI\s-1ALGORITHM\s0\fR" 4
.IX Item "--privprotocol ALGORITHM"
[SNMPv3] The User-based Security Model described in \s-1RFC\s0 3414 defines a
single encryption protocol to be used for privacy.  This protocol,
CBC-DES \f(CW\*(C`DES\*(C'\fR (\s-1NIST\s0 \s-1FIPS\s0 \s-1PUB\s0 46\-1), is used by default or if the
string \f(CW\*(C`des\*(C'\fR is passed to the \-\-privprotocol option. The Net::SNMP
module also supports \s-1RFC\s0 3826 which describes the use of
\&\s-1CFB128\-AES\-128\s0 \f(CW\*(C`AES\*(C'\fR (\s-1NIST\s0 \s-1FIPS\s0 \s-1PUB\s0 197) in the \s-1USM\s0.  The \s-1AES\s0
encryption protocol can be selected by passing \f(CW\*(C`aes\*(C'\fR or \f(CW\*(C`aes128\*(C'\fR to
the \-\-privprotocol option.
.Sp
One of the following arguments are required: des, aes, aes128, 3des,
3desde
.IP "\-\-linebreak=\fI\s-1STRING\s0\fR" 4
.IX Item "--linebreak=STRING"
check_hp_bladechassis will sometimes report more than one line,
e.g. if there are several alerts. If the script has a \s-1TTY\s0, it will use
regular linebreaks. If not (which is the case with \s-1NRPE\s0) it will use
\&\s-1HTML\s0 linebreaks. Sometimes it can be useful to control what the plugin
uses as a line separator, and this option provides that control.
.Sp
The argument is the exact string to be used as the line
separator. There are two exceptions, i.e. two keywords that translates
to the following:
.RS 4
.IP "\fB\s-1REG\s0\fR" 4
.IX Item "REG"
Regular linebreaks, i.e. \*(L"\en\*(R".
.IP "\fB\s-1HTML\s0\fR" 4
.IX Item "HTML"
\&\s-1HTML\s0 linebreaks, i.e. \*(L"<br/>\*(R".
.RE
.RS 4
.Sp
This is a rather special option that is normally not needed. The
default behaviour should be sufficient for most users.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
The option \f(CW\*(C`\-\-debug\*(C'\fR (or \f(CW\*(C`\-d\*(C'\fR) can be specified to display status
of all components.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
The perl module Net::SNMP is required on the Nagios host.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
If no errors are discovered, a value of 0 (\s-1OK\s0) is returned. An exit
value of 1 (\s-1WARNING\s0) signifies one or more non-critical errors, while
2 (\s-1CRITICAL\s0) signifies one or more critical errors.
.Sp
The exit value 3 (\s-1UNKNOWN\s0) is reserved for errors within the script,
or errors getting values via \s-1SNMP\s0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Trond H. Amundsen <t.h.amundsen@usit.uio.no>
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
None known at present.
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
None known at present.
.Sp
Note that as of this writing, the plugin is only tested against the
c7000 enclosure.
.SH "REPORTING BUGS"
.IX Header "REPORTING BUGS"
Report bugs to <t.h.amundsen@usit.uio.no>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
This program is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at
your option) any later version.
.Sp
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0
General Public License for more details.
.Sp
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<http://folk.uio.no/trondham/software/check_hp_bladechassis.html>
